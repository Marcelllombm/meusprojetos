{"ast":null,"code":"var _jsxFileName = \"/home/marcelllombm/meusprojetos/prize-draw/src/components/Prize/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { FormPrize } from '../FormPrize';\nimport { People } from '../People';\nimport { Winner } from '../Winner';\nimport * as C from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Prize() {\n  _s();\n\n  const [valueInput, setValueInput] = useState('');\n  const [nameList, setNameLista] = useState([]);\n  const [prizeDraw, setPrizeDraw] = useState('');\n\n  const handleClick = e => {\n    e.preventDefault();\n\n    if (valueInput === '') {\n      console.log('error');\n    } else {\n      let list = {\n        id: Math.floor(Math.random() * 1000),\n        valueInput\n      };\n      const name = nameList;\n      setNameLista([...name, list]);\n      setValueInput('');\n    }\n  };\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setValueInput(target.value);\n  };\n\n  const handleRemove = id => event => {\n    const removeArr = [...nameList].filter(todo => todo.id !== id);\n    setNameLista(removeArr);\n  };\n\n  const handlePrizeDraw = () => {\n    const prizeDraw = Math.floor(Math.random() * nameList.length);\n    console.log(prizeDraw);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sorteio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormPrize, {\n        handleClick: handleClick,\n        handleChange: handleChange,\n        valueInput: valueInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), nameList.map((item, index) => /*#__PURE__*/_jsxDEV(People, {\n        item: item,\n        handleRemove: handleRemove\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Winner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Prize, \"5p8OBPNAXNTCZCIlu4cmn1kmgXA=\");\n\n_c = Prize;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prize\");","map":{"version":3,"sources":["/home/marcelllombm/meusprojetos/prize-draw/src/components/Prize/index.tsx"],"names":["useState","FormPrize","People","Winner","C","Prize","valueInput","setValueInput","nameList","setNameLista","prizeDraw","setPrizeDraw","handleClick","e","preventDefault","console","log","list","id","Math","floor","random","name","handleChange","target","value","handleRemove","event","removeArr","filter","todo","handlePrizeDraw","length","map","item","index"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;AAMA,OAAO,SAASC,KAAT,GAAiB;AAAA;;AAEtB,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,QAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAa,EAAb,CAAzC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAOY,WAAW,GAAIC,CAAD,IAAkB;AACrCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGR,UAAU,KAAK,EAAlB,EAAqB;AACnBS,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAFD,MAEM;AAEJ,UAAIC,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADK;AAETf,QAAAA;AAFS,OAAX;AAIA,YAAMgB,IAAI,GAAId,QAAd;AACAC,MAAAA,YAAY,CAAC,CAAC,GAAGa,IAAJ,EAAUL,IAAV,CAAD,CAAZ;AACAV,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,GAfD;;AAiBA,QAAMgB,YAAY,GAAG,QAAqC;AAAA,QAApC;AAACC,MAAAA;AAAD,KAAoC;AACxDjB,IAAAA,aAAa,CAACiB,MAAM,CAACC,KAAR,CAAb;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGR,EAAD,IAAiBS,KAAD,IAAgB;AAClD,UAAMC,SAAS,GAAG,CAAC,GAAGpB,QAAJ,EAAcqB,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYA,EAAzC,CAAlB;AACAT,IAAAA,YAAY,CAACmB,SAAD,CAAZ;AACD,GAHD;;AAKA,QAAMG,eAAe,GAAG,MAAM;AAC5B,UAAMrB,SAAS,GAAGS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,QAAQ,CAACwB,MAApC,CAAlB;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACD,GAHD;;AAKE,sBACA,QAAC,CAAD,CAAG,SAAH;AAAA,4BACE,QAAC,CAAD,CAAG,OAAH;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAEE,WAAxB;AAAqC,QAAA,YAAY,EAAEW,YAAnD;AAAiE,QAAA,UAAU,EAAEjB;AAA7E;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGE,QAAQ,CAACyB,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACV,QAAC,MAAD;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,YAAY,EAAER;AAHhB,SACOS,KADP;AAAA;AAAA;AAAA;AAAA,cADH,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiBH;;GAtDe9B,K;;KAAAA,K","sourcesContent":["import { match } from 'assert';\nimport { useState } from 'react';\nimport { FormPrize } from '../FormPrize';\nimport { People } from '../People';\nimport { Winner } from '../Winner';\nimport * as C from './styles';\n\ninterface propsObj {\n  id: number;\n  valueInput: string;\n}\nexport function Prize() { \n\n  const [ valueInput, setValueInput ] = useState('');\n  const [nameList, setNameLista] = useState<propsObj[]>([]);\n  const [prizeDraw, setPrizeDraw] = useState('');\n\n  const  handleClick = (e: any): void => {\n    e.preventDefault();\n    \n    if(valueInput === ''){\n      console.log('error')\n    }else {\n\n      let list = {\n        id: Math.floor(Math.random() * 1000),\n        valueInput,\n      };\n      const name =  nameList\n      setNameLista([...name, list]);\n      setValueInput('');\n    }\n  }\n\n  const handleChange = ({target}: React.ChangeEvent<any>) =>{\n    setValueInput(target.value);\n  }\n\n  const handleRemove =(id: number) => (event: any) => {\n    const removeArr = [...nameList].filter(todo => todo.id !== id);\n    setNameLista(removeArr);\n  }\n\n  const handlePrizeDraw = () => {\n    const prizeDraw = Math.floor(Math.random() * nameList.length);\n    console.log(prizeDraw);\n  }\n\n    return (\n    <C.Container>\n      <C.Content>\n        <h1>Sorteio</h1>\n        <FormPrize handleClick={handleClick} handleChange={handleChange} valueInput={valueInput}/>\n        {nameList.map((item, index)=>(\n            <People\n              key={index}\n              item={item}\n              handleRemove={handleRemove}\n            />\n          ))}\n        \n      </C.Content>\n      <Winner />\n    </C.Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}